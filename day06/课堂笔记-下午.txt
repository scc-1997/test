javascript
1）DOM document object model文档对象模型
它把html一个页面进行封装
把html中每个元素（h1，label，input，button）都变成一个对象
形成一个dom树

可以利用js它提供api，就可以通过这套程序来访问页面元素
document.getElementsByTag("h1")
获取到h1对象，它就可以获取这个对象内容：
document.getElementsByTag("h1")[0].innerText

2）BOM browser object model 浏览器对象模型
封装抽象浏览器对象，非常少用

js它已经是浏览器标准，各大浏览器都直接支持，无需安装，直接使用

保时捷718 Cayman T，红色，641000元起
1）Car 对象
2）属性：name，type，color，price

小结：
1）css修饰，基本我们需要定义大量样式代码，开发人员，企业中美工。专门人来做中间事情，bootstrap产品实现漂亮一套体系
不同的浏览器写的css不一致（1%）
软件：推荐使用谷歌浏览器（IE页面混乱我们不管，工作量非常大）、
面对很庞杂内容，如何去学习？
看官网案例，网站典型网站案例

2）引入外部css文件的方式
<link>标签
两个属性：
a. rel="stylesheet"
b. href="" 样式表文件，可以自定义，也可以别人写好的你拿来用
 base.css 纯文本文件，内容css语法

3）外部样式表从哪来来？


<link href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" rel="stylesheet">


4）三种引用样式方式
	a. 私有，在元素上定义 <div style="color:red;"></div>
	b. 页面公用，在<head>标签中<style>
	c. 它可以在多个文件中共享 <link>标签

5）bootstrap预定义的样式

6）javascript
DOM 文档对象模型（必须掌握），BOM 浏览器对象模型
js提供针对DOM树api，获取树中的元素，其实就是页面元素

document.getElementsByTagName 获取某个Tag标签的对象

document.title	获取网页页面的标题

7）es6 箭头函数，匿名函数，多线程并发没有安全（私有）
8）js动态语言，所有变量类型var，解析到这句时，根据这个变量赋值的类型，来决定。类型还可以动态变化。java做不到！！！！

9）对象创建

var Car = new Object();
var Car = {};	//简洁写法
var Car;		//错误

